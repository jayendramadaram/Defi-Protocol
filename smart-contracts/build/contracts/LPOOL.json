{
  "contractName": "LPOOL",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract PantherToken",
          "name": "_PNT",
          "type": "address"
        },
        {
          "internalType": "contract USN",
          "name": "_USN",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pnt",
      "outputs": [
        {
          "internalType": "contract PantherToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "usn",
      "outputs": [
        {
          "internalType": "contract USN",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RewardTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract PantherToken\",\"name\":\"_PNT\",\"type\":\"address\"},{\"internalType\":\"contract USN\",\"name\":\"_USN\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"RewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pnt\",\"outputs\":[{\"internalType\":\"contract PantherToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usn\",\"outputs\":[{\"internalType\":\"contract USN\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/LiquidityPool.sol\":\"LPOOL\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/LiquidityPool.sol\":{\"keccak256\":\"0x1bc1fa19f59adcc5711dbe48366154eec6e735e6f781d70bc9035f2379007532\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d39f398e818f2ab5e560e51d7a93a8e695f98a98d5b163bd1e0fcb57cfbb0e23\",\"dweb:/ipfs/QmdAhT6UePSG2oZgzKKMhqZPyR578ToCq71hyXNc8C3Hyn\"]},\"project:/contracts/PantherToken.sol\":{\"keccak256\":\"0xc2b6901b3d3df254e446da7e59132ebf6d01e3cb9c8a5293f2a3430985ecfe4a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://257ca4911d598e95361b10a0a51a54d92cdc334773f0783738f98b7b75af7c5c\",\"dweb:/ipfs/QmSjJxkM8qsPsfgGpaDQCw8PEzmCNtpVKaogJMxXMCWj7g\"]},\"project:/contracts/USN.sol\":{\"keccak256\":\"0xd60df8fc4d6fdacf7d8fb80f99fdebe08cf1d4cd60506b329d27089737ee3d41\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4490e7d472256160c3349b8a1a07fe00630181c001628404cf9a8d95fa033168\",\"dweb:/ipfs/QmZZYBxNNXq4Gjw6Ugg8QWNTXRo2aADbtj6E9STe7uEnDr\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000e5938038062000e598339818101604052810190620000379190620001c4565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200020b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001338262000106565b9050919050565b6000620001478262000126565b9050919050565b62000159816200013a565b81146200016557600080fd5b50565b60008151905062000179816200014e565b92915050565b60006200018c8262000126565b9050919050565b6200019e816200017f565b8114620001aa57600080fd5b50565b600081519050620001be8162000193565b92915050565b60008060408385031215620001de57620001dd62000101565b5b6000620001ee8582860162000168565b92505060206200020185828601620001ad565b9150509250929050565b610c3e806200021b6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063227a473b1461006757806336c1ad31146100835780633d511b4f146100a15780633feb5f2b146100bf5780637538eecf146100ef578063c7fab8b7146100f9575b600080fd5b610081600480360381019061007c91906107a4565b610103565b005b61008b61034f565b6040516100989190610850565b60405180910390f35b6100a9610373565b6040516100b6919061088c565b60405180910390f35b6100d960048036038101906100d491906107a4565b610399565b6040516100e691906108c8565b60405180910390f35b6100f76103d8565b005b610101610581565b005b60008111610146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013d90610940565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016101a59392919061096f565b6020604051808303816000875af11580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e891906109de565b5080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102389190610a3a565b92505081905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661034c576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600581815481106103a957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161045a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045190610adc565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016104f6929190610afc565b6020604051808303816000875af1158015610515573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053991906109de565b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060890610b71565b60405180910390fd5b60005b6005805490508110156107665760006005828154811061063757610636610b91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156107515760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161070c929190610afc565b6020604051808303816000875af115801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f91906109de565b505b5050808061075e90610bc0565b915050610614565b50565b600080fd5b6000819050919050565b6107818161076e565b811461078c57600080fd5b50565b60008135905061079e81610778565b92915050565b6000602082840312156107ba576107b9610769565b5b60006107c88482850161078f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061081661081161080c846107d1565b6107f1565b6107d1565b9050919050565b6000610828826107fb565b9050919050565b600061083a8261081d565b9050919050565b61084a8161082f565b82525050565b60006020820190506108656000830184610841565b92915050565b60006108768261081d565b9050919050565b6108868161086b565b82525050565b60006020820190506108a1600083018461087d565b92915050565b60006108b2826107d1565b9050919050565b6108c2816108a7565b82525050565b60006020820190506108dd60008301846108b9565b92915050565b600082825260208201905092915050565b7f4455444520534f4d452046494e49544520544f4b454e204e4f54203000000000600082015250565b600061092a601c836108e3565b9150610935826108f4565b602082019050919050565b600060208201905081810360008301526109598161091d565b9050919050565b6109698161076e565b82525050565b600060608201905061098460008301866108b9565b61099160208301856108b9565b61099e6040830184610960565b949350505050565b60008115159050919050565b6109bb816109a6565b81146109c657600080fd5b50565b6000815190506109d8816109b2565b92915050565b6000602082840312156109f4576109f3610769565b5b6000610a02848285016109c9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a458261076e565b9150610a508361076e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a8557610a84610a0b565b5b828201905092915050565b7f596f75206172656e74207374616b696e6720746f20756e7374616b6500000000600082015250565b6000610ac6601c836108e3565b9150610ad182610a90565b602082019050919050565b60006020820190508181036000830152610af581610ab9565b9050919050565b6000604082019050610b1160008301856108b9565b610b1e6020830184610960565b9392505050565b7f596f75206172656e74206f776e65720000000000000000000000000000000000600082015250565b6000610b5b600f836108e3565b9150610b6682610b25565b602082019050919050565b60006020820190508181036000830152610b8a81610b4e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bcb8261076e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bfd57610bfc610a0b565b5b60018201905091905056fea264697066735822122003727bbfbd267766a4fdb34aa804c67616127f9de01dcf25beed9b6f04eeb49c64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063227a473b1461006757806336c1ad31146100835780633d511b4f146100a15780633feb5f2b146100bf5780637538eecf146100ef578063c7fab8b7146100f9575b600080fd5b610081600480360381019061007c91906107a4565b610103565b005b61008b61034f565b6040516100989190610850565b60405180910390f35b6100a9610373565b6040516100b6919061088c565b60405180910390f35b6100d960048036038101906100d491906107a4565b610399565b6040516100e691906108c8565b60405180910390f35b6100f76103d8565b005b610101610581565b005b60008111610146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013d90610940565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016101a59392919061096f565b6020604051808303816000875af11580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e891906109de565b5080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102389190610a3a565b92505081905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661034c576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600581815481106103a957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161045a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045190610adc565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016104f6929190610afc565b6020604051808303816000875af1158015610515573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053991906109de565b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060890610b71565b60405180910390fd5b60005b6005805490508110156107665760006005828154811061063757610636610b91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156107515760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161070c929190610afc565b6020604051808303816000875af115801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f91906109de565b505b5050808061075e90610bc0565b915050610614565b50565b600080fd5b6000819050919050565b6107818161076e565b811461078c57600080fd5b50565b60008135905061079e81610778565b92915050565b6000602082840312156107ba576107b9610769565b5b60006107c88482850161078f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061081661081161080c846107d1565b6107f1565b6107d1565b9050919050565b6000610828826107fb565b9050919050565b600061083a8261081d565b9050919050565b61084a8161082f565b82525050565b60006020820190506108656000830184610841565b92915050565b60006108768261081d565b9050919050565b6108868161086b565b82525050565b60006020820190506108a1600083018461087d565b92915050565b60006108b2826107d1565b9050919050565b6108c2816108a7565b82525050565b60006020820190506108dd60008301846108b9565b92915050565b600082825260208201905092915050565b7f4455444520534f4d452046494e49544520544f4b454e204e4f54203000000000600082015250565b600061092a601c836108e3565b9150610935826108f4565b602082019050919050565b600060208201905081810360008301526109598161091d565b9050919050565b6109698161076e565b82525050565b600060608201905061098460008301866108b9565b61099160208301856108b9565b61099e6040830184610960565b949350505050565b60008115159050919050565b6109bb816109a6565b81146109c657600080fd5b50565b6000815190506109d8816109b2565b92915050565b6000602082840312156109f4576109f3610769565b5b6000610a02848285016109c9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a458261076e565b9150610a508361076e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a8557610a84610a0b565b5b828201905092915050565b7f596f75206172656e74207374616b696e6720746f20756e7374616b6500000000600082015250565b6000610ac6601c836108e3565b9150610ad182610a90565b602082019050919050565b60006020820190508181036000830152610af581610ab9565b9050919050565b6000604082019050610b1160008301856108b9565b610b1e6020830184610960565b9392505050565b7f596f75206172656e74206f776e65720000000000000000000000000000000000600082015250565b6000610b5b600f836108e3565b9150610b6682610b25565b602082019050919050565b60006020820190508181036000830152610b8a81610b4e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bcb8261076e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bfd57610bfc610a0b565b5b60018201905091905056fea264697066735822122003727bbfbd267766a4fdb34aa804c67616127f9de01dcf25beed9b6f04eeb49c64736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2053:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:9",
                "type": ""
              }
            ],
            "src": "7:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:9",
                "type": ""
              }
            ],
            "src": "334:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:9",
                "type": ""
              }
            ],
            "src": "466:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "654:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "643:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PantherToken_$253",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "625:7:9",
                "type": ""
              }
            ],
            "src": "568:116:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:99:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "830:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "839:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "842:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "832:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "832:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "832:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "776:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "821:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PantherToken_$253",
                              "nodeType": "YulIdentifier",
                              "src": "783:37:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "783:44:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "773:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:55:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:63:9"
                  },
                  "nodeType": "YulIf",
                  "src": "763:83:9"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PantherToken_$253",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "746:5:9",
                "type": ""
              }
            ],
            "src": "690:162:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "941:100:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "951:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "966:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "960:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "951:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1029:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PantherToken_$253",
                      "nodeType": "YulIdentifier",
                      "src": "982:46:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:53:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:53:9"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PantherToken_$253_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "919:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "927:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "935:5:9",
                "type": ""
              }
            ],
            "src": "858:183:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1103:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1113:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1142:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1124:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1113:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_USN_$304",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1085:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1095:7:9",
                "type": ""
              }
            ],
            "src": "1047:107:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1214:90:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1282:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1291:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1294:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1284:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1284:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1284:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1237:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1273:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_USN_$304",
                              "nodeType": "YulIdentifier",
                              "src": "1244:28:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1244:35:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1234:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1234:46:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1227:54:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1224:74:9"
                }
              ]
            },
            "name": "validator_revert_t_contract$_USN_$304",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1207:5:9",
                "type": ""
              }
            ],
            "src": "1160:144:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1384:91:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1394:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1409:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1403:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1403:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1394:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1463:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_USN_$304",
                      "nodeType": "YulIdentifier",
                      "src": "1425:37:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1425:44:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1425:44:9"
                }
              ]
            },
            "name": "abi_decode_t_contract$_USN_$304_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1362:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1370:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1378:5:9",
                "type": ""
              }
            ],
            "src": "1310:165:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1606:444:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1652:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1654:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1654:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1654:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1627:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1636:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1623:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1623:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1648:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1619:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1616:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1745:148:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1760:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1774:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1764:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1789:94:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1855:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1866:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1851:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1851:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1875:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PantherToken_$253_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1799:51:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1799:84:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1789:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1903:140:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1918:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1932:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1922:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1948:85:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2005:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2016:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2001:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2001:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2025:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_USN_$304_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1958:42:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1958:75:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1948:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PantherToken_$253t_contract$_USN_$304_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1568:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1579:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1591:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1599:6:9",
                "type": ""
              }
            ],
            "src": "1481:569:9"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_PantherToken_$253(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PantherToken_$253(value) {\n        if iszero(eq(value, cleanup_t_contract$_PantherToken_$253(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PantherToken_$253_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PantherToken_$253(value)\n    }\n\n    function cleanup_t_contract$_USN_$304(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_USN_$304(value) {\n        if iszero(eq(value, cleanup_t_contract$_USN_$304(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_USN_$304_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_USN_$304(value)\n    }\n\n    function abi_decode_tuple_t_contract$_PantherToken_$253t_contract$_USN_$304_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PantherToken_$253_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_USN_$304_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8752:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:9",
                "type": ""
              }
            ],
            "src": "7:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:9",
                "type": ""
              }
            ],
            "src": "334:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:9",
                "type": ""
              }
            ],
            "src": "417:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:9",
                "type": ""
              }
            ],
            "src": "545:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:9",
                "type": ""
              }
            ],
            "src": "690:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:9",
                "type": ""
              }
            ],
            "src": "1025:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1189:28:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1199:12:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1206:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1199:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1175:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1185:3:9",
                "type": ""
              }
            ],
            "src": "1157:60:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1283:82:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1293:66:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1351:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1333:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1333:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1324:8:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1324:34:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1306:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:53:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1293:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1263:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1273:9:9",
                "type": ""
              }
            ],
            "src": "1223:142:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1431:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1441:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1485:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1454:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1454:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1441:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1411:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1421:9:9",
                "type": ""
              }
            ],
            "src": "1371:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1583:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1593:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1637:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1606:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1606:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1593:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_PantherToken_$253_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1563:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1573:9:9",
                "type": ""
              }
            ],
            "src": "1503:146:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1740:86:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1757:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1813:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_PantherToken_$253_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1762:50:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1762:57:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1750:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:70:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1750:70:9"
                }
              ]
            },
            "name": "abi_encode_t_contract$_PantherToken_$253_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1728:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1735:3:9",
                "type": ""
              }
            ],
            "src": "1655:171:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1950:144:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1960:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1972:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1983:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1968:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1968:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1960:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2060:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2073:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2084:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2069:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2069:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PantherToken_$253_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1996:63:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1996:91:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1996:91:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PantherToken_$253__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1922:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1934:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1945:4:9",
                "type": ""
              }
            ],
            "src": "1832:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2171:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2181:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2225:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2194:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2194:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2181:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_USN_$304_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2151:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2161:9:9",
                "type": ""
              }
            ],
            "src": "2100:137:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2319:77:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2336:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2383:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_USN_$304_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2341:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2341:48:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2329:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2329:61:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2329:61:9"
                }
              ]
            },
            "name": "abi_encode_t_contract$_USN_$304_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2307:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2314:3:9",
                "type": ""
              }
            ],
            "src": "2243:153:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2511:135:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2521:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2533:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2544:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2529:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2529:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2521:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2612:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2625:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2636:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2621:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2621:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_USN_$304_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2557:54:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:82:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2557:82:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_USN_$304__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2483:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2495:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2506:4:9",
                "type": ""
              }
            ],
            "src": "2402:244:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2697:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2707:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2736:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2718:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2718:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2707:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2679:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2689:7:9",
                "type": ""
              }
            ],
            "src": "2652:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2819:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2836:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2859:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2841:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2841:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2829:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2829:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2829:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2807:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2814:3:9",
                "type": ""
              }
            ],
            "src": "2754:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2976:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2986:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2998:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3009:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2994:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2994:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2986:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3066:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3079:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3090:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3075:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3075:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3022:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3022:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3022:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2948:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2960:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2971:4:9",
                "type": ""
              }
            ],
            "src": "2878:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3202:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3219:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3224:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3212:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3212:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3240:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3259:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3264:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3255:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3255:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3240:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3174:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3179:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3190:11:9",
                "type": ""
              }
            ],
            "src": "3106:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3387:72:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3409:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3417:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3405:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3405:14:9"
                      },
                      {
                        "hexValue": "4455444520534f4d452046494e49544520544f4b454e204e4f542030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3421:30:9",
                        "type": "",
                        "value": "DUDE SOME FINITE TOKEN NOT 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3398:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3398:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3398:54:9"
                }
              ]
            },
            "name": "store_literal_in_memory_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3379:6:9",
                "type": ""
              }
            ],
            "src": "3281:178:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3611:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3621:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3687:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3692:2:9",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3628:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3628:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3621:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3793:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973",
                      "nodeType": "YulIdentifier",
                      "src": "3704:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3704:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3704:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3806:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3817:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3822:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3813:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3813:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3806:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3599:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3607:3:9",
                "type": ""
              }
            ],
            "src": "3465:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4008:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4018:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4030:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4041:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4026:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4026:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4018:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4065:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4076:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4061:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4061:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4084:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4090:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4080:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4080:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4054:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4054:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4054:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4110:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4244:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4118:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4118:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4110:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3988:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4003:4:9",
                "type": ""
              }
            ],
            "src": "3837:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4327:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4344:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4367:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4349:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4349:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4337:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4337:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4337:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4315:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4322:3:9",
                "type": ""
              }
            ],
            "src": "4262:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4540:288:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4550:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4562:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4573:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4558:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4558:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4550:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4630:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4643:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4654:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4639:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4639:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4586:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4586:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4586:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4711:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4724:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4735:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4720:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4720:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4667:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4667:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4667:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4793:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4806:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4817:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4802:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4802:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4749:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4749:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4749:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4496:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4508:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4516:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4524:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4535:4:9",
                "type": ""
              }
            ],
            "src": "4386:442:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4876:48:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4886:32:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4911:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4904:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4904:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4897:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4897:21:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4886:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4858:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4868:7:9",
                "type": ""
              }
            ],
            "src": "4834:90:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4970:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5024:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5033:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5036:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5026:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5026:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5026:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4993:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5015:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "5000:14:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5000:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4990:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4990:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4983:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4983:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4980:60:9"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4963:5:9",
                "type": ""
              }
            ],
            "src": "4930:116:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5112:77:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5122:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5137:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5131:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5131:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5122:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5177:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5153:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5153:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5153:30:9"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5090:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5098:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5106:5:9",
                "type": ""
              }
            ],
            "src": "5052:137:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5269:271:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5315:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5317:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5317:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5317:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5290:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5299:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5286:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5286:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5311:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5282:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5282:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5279:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5408:125:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5423:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5437:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5427:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5452:71:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5495:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5506:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5491:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5491:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5515:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5462:28:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5462:61:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5452:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5239:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5250:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5262:6:9",
                "type": ""
              }
            ],
            "src": "5195:345:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5574:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5591:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5594:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5584:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5584:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5584:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5688:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5691:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5681:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5681:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5681:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5712:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5715:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5705:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5705:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5705:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5546:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5776:261:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5786:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5809:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5791:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5791:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "5786:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5820:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5843:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5825:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5825:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "5820:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5983:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5985:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5985:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5985:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5904:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5911:66:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5979:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5907:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5907:74:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5901:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5901:81:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5898:107:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6015:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6026:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6029:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6022:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6022:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6015:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5763:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5766:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5772:3:9",
                "type": ""
              }
            ],
            "src": "5732:305:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6149:72:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6171:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6179:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6167:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6167:14:9"
                      },
                      {
                        "hexValue": "596f75206172656e74207374616b696e6720746f20756e7374616b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6183:30:9",
                        "type": "",
                        "value": "You arent staking to unstake"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6160:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6160:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6160:54:9"
                }
              ]
            },
            "name": "store_literal_in_memory_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6141:6:9",
                "type": ""
              }
            ],
            "src": "6043:178:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6373:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6383:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6449:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6454:2:9",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6390:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6390:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6383:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6555:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4",
                      "nodeType": "YulIdentifier",
                      "src": "6466:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6466:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6466:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6568:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6579:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6584:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6575:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6575:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6568:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6361:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6369:3:9",
                "type": ""
              }
            ],
            "src": "6227:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6770:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6780:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6792:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6803:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6788:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6788:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6780:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6827:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6838:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6823:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6823:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6846:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6852:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6842:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6842:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6816:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6816:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6816:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6872:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7006:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6880:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6880:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6872:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6750:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6765:4:9",
                "type": ""
              }
            ],
            "src": "6599:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7150:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7160:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7172:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7183:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7168:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7168:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7160:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7240:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7253:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7264:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7249:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7249:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7196:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7196:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7196:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7321:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7334:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7345:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7330:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7330:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7277:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7277:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7277:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7114:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7126:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7134:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7145:4:9",
                "type": ""
              }
            ],
            "src": "7024:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7468:59:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7490:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7498:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7486:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7486:14:9"
                      },
                      {
                        "hexValue": "596f75206172656e74206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7502:17:9",
                        "type": "",
                        "value": "You arent owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7479:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7479:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7479:41:9"
                }
              ]
            },
            "name": "store_literal_in_memory_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7460:6:9",
                "type": ""
              }
            ],
            "src": "7362:165:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7679:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7689:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7755:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7760:2:9",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7696:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7696:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7689:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7861:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0",
                      "nodeType": "YulIdentifier",
                      "src": "7772:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7772:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7772:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7874:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7885:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7890:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7881:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7881:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7874:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7667:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7675:3:9",
                "type": ""
              }
            ],
            "src": "7533:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8076:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8086:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8098:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8109:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8094:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8094:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8086:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8133:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8144:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8129:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8129:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8152:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8158:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8148:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8148:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8122:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8122:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8122:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8178:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8312:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8186:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8186:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8178:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8056:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8071:4:9",
                "type": ""
              }
            ],
            "src": "7905:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8358:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8375:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8378:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8368:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8368:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8368:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8472:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8475:4:9",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8465:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8465:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8465:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8496:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8499:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8489:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8489:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8489:15:9"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "8330:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8559:190:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8569:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8596:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8578:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8578:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8569:5:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8692:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8694:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8694:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8694:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8617:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8624:66:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8614:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8614:77:9"
                  },
                  "nodeType": "YulIf",
                  "src": "8611:103:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8723:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8734:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8741:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8730:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8730:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8723:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8545:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8555:3:9",
                "type": ""
              }
            ],
            "src": "8516:233:9"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PantherToken_$253_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PantherToken_$253_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PantherToken_$253_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PantherToken_$253__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_PantherToken_$253_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_USN_$304_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_USN_$304_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_USN_$304_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_USN_$304__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_USN_$304_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973(memPtr) {\n\n        mstore(add(memPtr, 0), \"DUDE SOME FINITE TOKEN NOT 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4(memPtr) {\n\n        mstore(add(memPtr, 0), \"You arent staking to unstake\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0(memPtr) {\n\n        mstore(add(memPtr, 0), \"You arent owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "122:1359:0:-:0;;;217:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;279:10;271:5;;:18;;;;;;;;;;;;;;;;;;306:4;300:3;;:10;;;;;;;;;;;;;;;;;;327:4;321:3;;:10;;;;;;;;;;;;;;;;;;217:122;;122:1359;;88:117:9;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:107::-;1095:7;1124:24;1142:5;1124:24;:::i;:::-;1113:35;;1047:107;;;:::o;1160:144::-;1244:35;1273:5;1244:35;:::i;:::-;1237:5;1234:46;1224:74;;1294:1;1291;1284:12;1224:74;1160:144;:::o;1310:165::-;1378:5;1409:6;1403:13;1394:22;;1425:44;1463:5;1425:44;:::i;:::-;1310:165;;;;:::o;1481:569::-;1591:6;1599;1648:2;1636:9;1627:7;1623:23;1619:32;1616:119;;;1654:79;;:::i;:::-;1616:119;1774:1;1799:84;1875:7;1866:6;1855:9;1851:22;1799:84;:::i;:::-;1789:94;;1745:148;1932:2;1958:75;2025:7;2016:6;2005:9;2001:22;1958:75;:::i;:::-;1948:85;;1903:140;1481:569;;;;;:::o;122:1359:0:-;;;;;;;",
  "deployedSourceMap": "122:1359:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;144:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;174:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;540:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:218;;;:::i;:::-;;1159:311;;;:::i;:::-;;575:350;638:1;629:6;:10;621:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;685:3;;;;;;;;;;;:16;;;702:10;722:4;729:6;685:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;778:6;749:13;:25;763:10;749:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;801:8;:20;810:10;801:20;;;;;;;;;;;;;;;;;;;;;;;;;797:121;;838:9;853:10;838:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:4;879:8;:20;888:10;879:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;797:121;575:350;:::o;144:23::-;;;;;;;;;;;;:::o;174:14::-;;;;;;;;;;;;;:::o;540:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;933:218::-;1006:1;978:13;:25;992:10;978:25;;;;;;;;;;;;;;;;:29;970:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1052:3;;;;;;;;;;;:12;;;1065:10;1077:13;:25;1091:10;1077:25;;;;;;;;;;;;;;;;1052:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1142:1;1114:13;:25;1128:10;1114:25;;;;;;;;;;;;;;;:29;;;;933:218::o;1159:311::-;399:5;;;;;;;;;;;385:19;;:10;:19;;;377:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1215:6:::1;1210:252;1232:9;:16;;;;1228:1;:20;1210:252;;;1271:16;1291:9;1301:1;1291:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1271:32;;1318:11;1332:13;:23;1346:8;1332:23;;;;;;;;;;;;;;;;1318:37;;1383:1;1374:6;:10;1370:81;;;1405:3;::::0;::::1;;;;;;;;:12;;;1418:8;1428:6;1405:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1370:81;1256:206;;1251:3;;;;;:::i;:::-;;;;1210:252;;;;1159:311::o:0;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:60::-;1185:3;1206:5;1199:12;;1157:60;;;:::o;1223:142::-;1273:9;1306:53;1324:34;1333:24;1351:5;1333:24;:::i;:::-;1324:34;:::i;:::-;1306:53;:::i;:::-;1293:66;;1223:142;;;:::o;1371:126::-;1421:9;1454:37;1485:5;1454:37;:::i;:::-;1441:50;;1371:126;;;:::o;1503:146::-;1573:9;1606:37;1637:5;1606:37;:::i;:::-;1593:50;;1503:146;;;:::o;1655:171::-;1762:57;1813:5;1762:57;:::i;:::-;1757:3;1750:70;1655:171;;:::o;1832:262::-;1945:4;1983:2;1972:9;1968:18;1960:26;;1996:91;2084:1;2073:9;2069:17;2060:6;1996:91;:::i;:::-;1832:262;;;;:::o;2100:137::-;2161:9;2194:37;2225:5;2194:37;:::i;:::-;2181:50;;2100:137;;;:::o;2243:153::-;2341:48;2383:5;2341:48;:::i;:::-;2336:3;2329:61;2243:153;;:::o;2402:244::-;2506:4;2544:2;2533:9;2529:18;2521:26;;2557:82;2636:1;2625:9;2621:17;2612:6;2557:82;:::i;:::-;2402:244;;;;:::o;2652:96::-;2689:7;2718:24;2736:5;2718:24;:::i;:::-;2707:35;;2652:96;;;:::o;2754:118::-;2841:24;2859:5;2841:24;:::i;:::-;2836:3;2829:37;2754:118;;:::o;2878:222::-;2971:4;3009:2;2998:9;2994:18;2986:26;;3022:71;3090:1;3079:9;3075:17;3066:6;3022:71;:::i;:::-;2878:222;;;;:::o;3106:169::-;3190:11;3224:6;3219:3;3212:19;3264:4;3259:3;3255:14;3240:29;;3106:169;;;;:::o;3281:178::-;3421:30;3417:1;3409:6;3405:14;3398:54;3281:178;:::o;3465:366::-;3607:3;3628:67;3692:2;3687:3;3628:67;:::i;:::-;3621:74;;3704:93;3793:3;3704:93;:::i;:::-;3822:2;3817:3;3813:12;3806:19;;3465:366;;;:::o;3837:419::-;4003:4;4041:2;4030:9;4026:18;4018:26;;4090:9;4084:4;4080:20;4076:1;4065:9;4061:17;4054:47;4118:131;4244:4;4118:131;:::i;:::-;4110:139;;3837:419;;;:::o;4262:118::-;4349:24;4367:5;4349:24;:::i;:::-;4344:3;4337:37;4262:118;;:::o;4386:442::-;4535:4;4573:2;4562:9;4558:18;4550:26;;4586:71;4654:1;4643:9;4639:17;4630:6;4586:71;:::i;:::-;4667:72;4735:2;4724:9;4720:18;4711:6;4667:72;:::i;:::-;4749;4817:2;4806:9;4802:18;4793:6;4749:72;:::i;:::-;4386:442;;;;;;:::o;4834:90::-;4868:7;4911:5;4904:13;4897:21;4886:32;;4834:90;;;:::o;4930:116::-;5000:21;5015:5;5000:21;:::i;:::-;4993:5;4990:32;4980:60;;5036:1;5033;5026:12;4980:60;4930:116;:::o;5052:137::-;5106:5;5137:6;5131:13;5122:22;;5153:30;5177:5;5153:30;:::i;:::-;5052:137;;;;:::o;5195:345::-;5262:6;5311:2;5299:9;5290:7;5286:23;5282:32;5279:119;;;5317:79;;:::i;:::-;5279:119;5437:1;5462:61;5515:7;5506:6;5495:9;5491:22;5462:61;:::i;:::-;5452:71;;5408:125;5195:345;;;;:::o;5546:180::-;5594:77;5591:1;5584:88;5691:4;5688:1;5681:15;5715:4;5712:1;5705:15;5732:305;5772:3;5791:20;5809:1;5791:20;:::i;:::-;5786:25;;5825:20;5843:1;5825:20;:::i;:::-;5820:25;;5979:1;5911:66;5907:74;5904:1;5901:81;5898:107;;;5985:18;;:::i;:::-;5898:107;6029:1;6026;6022:9;6015:16;;5732:305;;;;:::o;6043:178::-;6183:30;6179:1;6171:6;6167:14;6160:54;6043:178;:::o;6227:366::-;6369:3;6390:67;6454:2;6449:3;6390:67;:::i;:::-;6383:74;;6466:93;6555:3;6466:93;:::i;:::-;6584:2;6579:3;6575:12;6568:19;;6227:366;;;:::o;6599:419::-;6765:4;6803:2;6792:9;6788:18;6780:26;;6852:9;6846:4;6842:20;6838:1;6827:9;6823:17;6816:47;6880:131;7006:4;6880:131;:::i;:::-;6872:139;;6599:419;;;:::o;7024:332::-;7145:4;7183:2;7172:9;7168:18;7160:26;;7196:71;7264:1;7253:9;7249:17;7240:6;7196:71;:::i;:::-;7277:72;7345:2;7334:9;7330:18;7321:6;7277:72;:::i;:::-;7024:332;;;;;:::o;7362:165::-;7502:17;7498:1;7490:6;7486:14;7479:41;7362:165;:::o;7533:366::-;7675:3;7696:67;7760:2;7755:3;7696:67;:::i;:::-;7689:74;;7772:93;7861:3;7772:93;:::i;:::-;7890:2;7885:3;7881:12;7874:19;;7533:366;;;:::o;7905:419::-;8071:4;8109:2;8098:9;8094:18;8086:26;;8158:9;8152:4;8148:20;8144:1;8133:9;8129:17;8122:47;8186:131;8312:4;8186:131;:::i;:::-;8178:139;;7905:419;;;:::o;8330:180::-;8378:77;8375:1;8368:88;8475:4;8472:1;8465:15;8499:4;8496:1;8489:15;8516:233;8555:3;8578:24;8596:5;8578:24;:::i;:::-;8569:33;;8624:66;8617:5;8614:77;8611:103;;8694:18;;:::i;:::-;8611:103;8741:1;8734:5;8730:13;8723:20;;8516:233;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"./PantherToken.sol\";\r\nimport \"./USN.sol\";\r\n\r\ncontract LPOOL {\r\n    PantherToken public pnt;\r\n    USN public usn;\r\n    address owner;\r\n\r\n    constructor (PantherToken _PNT ,USN _USN ) {\r\n        owner = msg.sender;\r\n        pnt = _PNT;\r\n        usn = _USN;\r\n    }\r\n\r\n    modifier OnlyOwner {\r\n        require(msg.sender == owner , \"You arent owner\");\r\n        _;\r\n    }\r\n\r\n    mapping(address => uint) StakingRecord;\r\n    mapping(address => bool) POOLPASS;\r\n\r\n    address[] public investors;\r\n\r\n    function Stake(uint amount) public {\r\n        require(amount > 0, \"DUDE SOME FINITE TOKEN NOT 0\");\r\n\r\n        usn.transferFrom(msg.sender, address(this), amount);\r\n\r\n        StakingRecord[msg.sender] += amount;\r\n\r\n        if(!POOLPASS[msg.sender]) {\r\n            investors.push(msg.sender);\r\n            POOLPASS[msg.sender] = true;\r\n        }\r\n    }\r\n\r\n    function Unstake() public {\r\n        require(StakingRecord[msg.sender] > 0 , \"You arent staking to unstake\");\r\n        usn.transfer(msg.sender, StakingRecord[msg.sender]);\r\n        StakingRecord[msg.sender] = 0;\r\n    }\r\n\r\n    function RewardTokens() public OnlyOwner{\r\n        for (uint i = 0 ; i < investors.length ; i++) {\r\n            address investor =  investors[i];\r\n            uint reward = StakingRecord[investor];\r\n            if (reward > 0) {\r\n                pnt.transfer(investor, reward);\r\n            }\r\n        } \r\n    }\r\n\r\n    \r\n}",
  "sourcePath": "C:\\tai_jutsu\\All_Web3\\stakingprotocol\\smart-contracts\\contracts\\LiquidityPool.sol",
  "ast": {
    "absolutePath": "project:/contracts/LiquidityPool.sol",
    "exportedSymbols": {
      "Context": [
        1120
      ],
      "ERC20": [
        995
      ],
      "IERC20": [
        1073
      ],
      "IERC20Metadata": [
        1098
      ],
      "LPOOL": [
        186
      ],
      "Ownable": [
        409
      ],
      "PantherToken": [
        253
      ],
      "USN": [
        304
      ]
    },
    "id": 187,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "absolutePath": "project:/contracts/PantherToken.sol",
        "file": "./PantherToken.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 254,
        "src": "69:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/USN.sol",
        "file": "./USN.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 305,
        "src": "99:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LPOOL",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 186,
        "linearizedBaseContracts": [
          186
        ],
        "name": "LPOOL",
        "nameLocation": "131:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "36c1ad31",
            "id": 6,
            "mutability": "mutable",
            "name": "pnt",
            "nameLocation": "164:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "144:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PantherToken_$253",
              "typeString": "contract PantherToken"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "PantherToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 253,
                "src": "144:12:0"
              },
              "referencedDeclaration": 253,
              "src": "144:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PantherToken_$253",
                "typeString": "contract PantherToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3d511b4f",
            "id": 9,
            "mutability": "mutable",
            "name": "usn",
            "nameLocation": "185:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "174:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_USN_$304",
              "typeString": "contract USN"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "USN",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 304,
                "src": "174:3:0"
              },
              "referencedDeclaration": 304,
              "src": "174:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_USN_$304",
                "typeString": "contract USN"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "203:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "195:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "195:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "260:79:0",
              "statements": [
                {
                  "expression": {
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "271:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 21,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "279:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "279:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "271:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "271:18:0"
                },
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25,
                      "name": "pnt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "300:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PantherToken_$253",
                        "typeString": "contract PantherToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26,
                      "name": "_PNT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "306:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PantherToken_$253",
                        "typeString": "contract PantherToken"
                      }
                    },
                    "src": "300:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PantherToken_$253",
                      "typeString": "contract PantherToken"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "300:10:0"
                },
                {
                  "expression": {
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29,
                      "name": "usn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "321:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_USN_$304",
                        "typeString": "contract USN"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30,
                      "name": "_USN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "327:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_USN_$304",
                        "typeString": "contract USN"
                      }
                    },
                    "src": "321:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_USN_$304",
                      "typeString": "contract USN"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "321:10:0"
                }
              ]
            },
            "id": 34,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "_PNT",
                  "nameLocation": "243:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "230:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PantherToken_$253",
                    "typeString": "contract PantherToken"
                  },
                  "typeName": {
                    "id": 13,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12,
                      "name": "PantherToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 253,
                      "src": "230:12:0"
                    },
                    "referencedDeclaration": 253,
                    "src": "230:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PantherToken_$253",
                      "typeString": "contract PantherToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_USN",
                  "nameLocation": "253:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "249:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_USN_$304",
                    "typeString": "contract USN"
                  },
                  "typeName": {
                    "id": 16,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15,
                      "name": "USN",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 304,
                      "src": "249:3:0"
                    },
                    "referencedDeclaration": 304,
                    "src": "249:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_USN_$304",
                      "typeString": "contract USN"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "229:30:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "260:0:0"
            },
            "scope": 186,
            "src": "217:122:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "366:79:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "385:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "385:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 39,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "399:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "385:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e74206f776e6572",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "407:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0",
                          "typeString": "literal_string \"You arent owner\""
                        },
                        "value": "You arent owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8da4d519763fdb0aa7041b6cced2075bebdf3988bbf02c430350a100c690dfd0",
                          "typeString": "literal_string \"You arent owner\""
                        }
                      ],
                      "id": 36,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "377:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "377:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "377:48:0"
                },
                {
                  "id": 44,
                  "nodeType": "PlaceholderStatement",
                  "src": "436:1:0"
                }
              ]
            },
            "id": 46,
            "name": "OnlyOwner",
            "nameLocation": "356:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "366:0:0"
            },
            "src": "347:98:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "StakingRecord",
            "nameLocation": "478:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "453:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 47,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "461:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "453:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 48,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "472:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "POOLPASS",
            "nameLocation": "523:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "498:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "506:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "498:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 52,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "517:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "3feb5f2b",
            "id": 57,
            "mutability": "mutable",
            "name": "investors",
            "nameLocation": "557:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "540:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 55,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "540:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 56,
              "nodeType": "ArrayTypeName",
              "src": "540:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "610:315:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 63,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "629:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "638:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "629:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4455444520534f4d452046494e49544520544f4b454e204e4f542030",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "641:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973",
                          "typeString": "literal_string \"DUDE SOME FINITE TOKEN NOT 0\""
                        },
                        "value": "DUDE SOME FINITE TOKEN NOT 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81df054ece1726be41ef1e369921321046033169a93d120a0e86864508407973",
                          "typeString": "literal_string \"DUDE SOME FINITE TOKEN NOT 0\""
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "621:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "621:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "621:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 72,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "702:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "702:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 76,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "722:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPOOL_$186",
                              "typeString": "contract LPOOL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPOOL_$186",
                              "typeString": "contract LPOOL"
                            }
                          ],
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "714:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "714:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "714:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "729:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 69,
                        "name": "usn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "685:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_USN_$304",
                          "typeString": "contract USN"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 609,
                      "src": "685:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "685:51:0"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 81,
                        "name": "StakingRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "749:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 84,
                      "indexExpression": {
                        "expression": {
                          "id": 82,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "763:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "763:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "749:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 85,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "778:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "749:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "749:35:0"
                },
                {
                  "condition": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "800:21:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 88,
                        "name": "POOLPASS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "801:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 91,
                      "indexExpression": {
                        "expression": {
                          "id": 89,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "810:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "810:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "801:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 108,
                  "nodeType": "IfStatement",
                  "src": "797:121:0",
                  "trueBody": {
                    "id": 107,
                    "nodeType": "Block",
                    "src": "823:95:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 96,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "853:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "853:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 93,
                              "name": "investors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "838:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "838:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "838:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "838:26:0"
                      },
                      {
                        "expression": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 100,
                              "name": "POOLPASS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "879:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 103,
                            "indexExpression": {
                              "expression": {
                                "id": 101,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "888:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "888:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "879:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "902:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "879:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 106,
                        "nodeType": "ExpressionStatement",
                        "src": "879:27:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "227a473b",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Stake",
            "nameLocation": "584:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "595:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "590:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "589:13:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:0:0"
            },
            "scope": 186,
            "src": "575:350:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "959:192:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 114,
                            "name": "StakingRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "978:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 117,
                          "indexExpression": {
                            "expression": {
                              "id": 115,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "992:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "992:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "978:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1006:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "978:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e74207374616b696e6720746f20756e7374616b65",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4",
                          "typeString": "literal_string \"You arent staking to unstake\""
                        },
                        "value": "You arent staking to unstake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6b50d818227ce6ae97673babd5683bc2bb6fa3effbba8c2b79d453967d27bd4",
                          "typeString": "literal_string \"You arent staking to unstake\""
                        }
                      ],
                      "id": 113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "970:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "970:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "970:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1065:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1065:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 128,
                          "name": "StakingRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "1077:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 131,
                        "indexExpression": {
                          "expression": {
                            "id": 129,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1091:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1091:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1077:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 123,
                        "name": "usn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1052:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_USN_$304",
                          "typeString": "contract USN"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 533,
                      "src": "1052:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1052:51:0"
                },
                {
                  "expression": {
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 134,
                        "name": "StakingRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1114:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 137,
                      "indexExpression": {
                        "expression": {
                          "id": 135,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1128:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1128:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1114:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1142:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1114:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:29:0"
                }
              ]
            },
            "functionSelector": "7538eecf",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Unstake",
            "nameLocation": "942:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "949:2:0"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "959:0:0"
            },
            "scope": 186,
            "src": "933:218:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1199:271:0",
              "statements": [
                {
                  "body": {
                    "id": 182,
                    "nodeType": "Block",
                    "src": "1256:206:0",
                    "statements": [
                      {
                        "assignments": [
                          159
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 159,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "1279:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 182,
                            "src": "1271:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 158,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1271:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 163,
                        "initialValue": {
                          "baseExpression": {
                            "id": 160,
                            "name": "investors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1291:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 162,
                          "indexExpression": {
                            "id": 161,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "1301:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1291:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1271:32:0"
                      },
                      {
                        "assignments": [
                          165
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 165,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "1323:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 182,
                            "src": "1318:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 164,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1318:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 169,
                        "initialValue": {
                          "baseExpression": {
                            "id": 166,
                            "name": "StakingRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1332:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 168,
                          "indexExpression": {
                            "id": 167,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "1346:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1332:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1318:37:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 170,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "1374:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1383:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1374:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 181,
                        "nodeType": "IfStatement",
                        "src": "1370:81:0",
                        "trueBody": {
                          "id": 180,
                          "nodeType": "Block",
                          "src": "1386:65:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 176,
                                    "name": "investor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 159,
                                    "src": "1418:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 177,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 165,
                                    "src": "1428:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 173,
                                    "name": "pnt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6,
                                    "src": "1405:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PantherToken_$253",
                                      "typeString": "contract PantherToken"
                                    }
                                  },
                                  "id": 175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 533,
                                  "src": "1405:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1405:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 179,
                              "nodeType": "ExpressionStatement",
                              "src": "1405:30:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "1228:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 152,
                        "name": "investors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1232:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1232:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1228:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 183,
                  "initializationExpression": {
                    "assignments": [
                      148
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1220:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1215:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1215:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 150,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1224:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1215:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1251:3:0",
                      "subExpression": {
                        "id": 155,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1251:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 157,
                    "nodeType": "ExpressionStatement",
                    "src": "1251:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1210:252:0"
                }
              ]
            },
            "functionSelector": "c7fab8b7",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 144,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1190:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1190:9:0"
              }
            ],
            "name": "RewardTokens",
            "nameLocation": "1168:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:2:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:0"
            },
            "scope": 186,
            "src": "1159:311:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 187,
        "src": "122:1359:0",
        "usedErrors": []
      }
    ],
    "src": "33:1448:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x19360bfea94E6908bC4D74525F7aBE4D65f850D8",
      "transactionHash": "0x921e7c943337b90a73bc489d1f07c1a3faa220b004aa9fc92931e29aa67a96b2"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-13T10:33:14.145Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}